{"version":3,"file":"summernote.component.js","sourceRoot":"","sources":["summernote.component.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../summernote.d.ts\" />\nimport * as $ from 'jquery';\n\nimport {\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    SecurityContext\n} from '@angular/core';\n\nimport {\n    NG_VALUE_ACCESSOR\n    , ControlValueAccessor\n} from '@angular/forms';\n\nconst SUMMERNOTE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SummernoteComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'summernote',\n    template: '<div class=\"summernote\"></div>',\n    providers: [SUMMERNOTE_VALUE_ACCESSOR]\n})\nexport class SummernoteComponent implements OnInit, OnDestroy, ControlValueAccessor {\n    @Input()\n    set options(options: SummernoteOptions) {\n        this._options = options;\n        this.addCallbacks();\n        this.refreshOptions();\n    }\n\n    get options(): SummernoteOptions {\n        return this._options || {};\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        if (disabled != null) {\n            this._disabled = disabled;\n            $(this.element.nativeElement).find('.summernote').summernote(disabled ? 'disable' : 'enable');\n            this.refreshOptions();\n        }\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input() whitespaceEmpty = false;\n\n    private _empty: boolean;\n\n    @Output() emptyChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    get empty(): boolean {\n        return this._empty;\n    }\n    set empty(value: boolean) {\n        if (this._empty != value) {\n            this._empty = value;\n            this.emptyChange.emit(value);\n        }\n    }\n\n    @Output() textChange: EventEmitter<string> = new EventEmitter<string>();\n\n    private _disabled: boolean = false;\n\n    private _options: SummernoteOptions;\n\n    private onTouched = () => { };\n    private onChange: (value: string) => void = () => { };\n\n    constructor(private element: ElementRef) {\n\n    }\n    private _value: string;\n\n    set value(value: string) {\n        this._value = value;\n    }\n    get value(): string {\n        return this._value;\n    }\n\n    private refreshOptions() {\n        $(this.element.nativeElement).find('.summernote').summernote(this.options);\n        if (this.options.tooltip != undefined && !this.options.tooltip)\n            (<any>$(this.element.nativeElement).find('.note-editor button.note-btn')).tooltip('destroy');\n    }\n\n    private addCallbacks() {\n        this.options.callbacks = {\n          onChange: (contents: string, $editable: JQuery) => {\n                this.refreshEmpty();\n                this.onChange(contents);\n            },\n            onBlur: () => {\n                this.onTouched();\n            }\n        };\n    }\n\n    private refreshEmpty() {\n        let summernote = $(this.element.nativeElement).find('.summernote');\n        if (summernote == null)\n            return;\n        this.empty = <boolean>(<any>summernote.summernote('isEmpty'))\n        if (this.whitespaceEmpty)\n            this.empty = this.empty || summernote.summernote('code').replace(/(<\\/?[^>]+>)|(&nbsp;)/g, \"\").trim() === '';\n    }\n\n    ngOnInit() {\n        if (this.options == null) {\n            this.options = {};\n        }\n        this.refreshEmpty();\n    }\n\n    ngOnDestroy() {\n        $(this.element.nativeElement).find('.summernote').summernote('destroy');\n    }\n\n    writeValue(code: string) {\n        this.value = code;\n\n        $(this.element.nativeElement).find('.summernote').summernote('code', code);\n        this.refreshEmpty();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n}\n"]}